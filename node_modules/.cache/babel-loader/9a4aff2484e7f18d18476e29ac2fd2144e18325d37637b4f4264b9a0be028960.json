{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'ProductView',\n  data() {\n    return {\n      product: {},\n      editedProduct: {},\n      inCart: false,\n      editMode: false\n    };\n  },\n  created() {\n    const productId = this.$route.params.id;\n    this.fetchProduct(productId);\n  },\n  methods: {\n    fetchProduct(productId) {\n      axios.get(`http://127.0.0.1:5000/edit_product/${productId}`).then(response => {\n        this.product = response.data;\n        console.log(this.product.Name);\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    // Add product to cart\n    addToCart(product) {\n      const existingItem = this.$store.state.cartItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Item already exists in cart, increment quantity\n        this.$store.commit('incrementCartItemQuantity', existingItem.id);\n      } else {\n        // Item doesn't exist in cart, add as new item\n        const cartItem = {\n          id: product.id,\n          name: product.Name,\n          price: product.Price,\n          quantity: 1\n        };\n        this.$store.commit('addToCart', cartItem);\n      }\n    },\n    removeFromCart() {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","product","editedProduct","inCart","editMode","created","productId","$route","params","id","fetchProduct","methods","get","then","response","console","log","Name","catch","error","addToCart","existingItem","$store","state","cartItems","find","item","commit","cartItem","price","Price","quantity","removeFromCart"],"sources":["/home/sezfabian/Devs/The_Tv_Guys/web_app/src/views/ProductView.vue"],"sourcesContent":["<template>\n  <div class=\"product-view\">\n    <div class=\"product-image\">\n      <img :src=\"product.Image\" alt=\"Product Image\" />\n    </div>\n        <div class=\"product-details\">\n            <h2>{{ product.Name }}</h2>\n            <h3 class=\"price\">Ksh {{ product.Price }}.00</h3>\n            <button @click=\"addToCart(product)\" v-if=\"!inCart\">Add to Cart</button>\n            <button @click=\"removeFromCart\" v-if=\"inCart\">Remove from Cart</button>\n        </div>\n        <div class=\"buttons\">\n            <p>{{ product.Description }}</p>\n            <p>Warranty: {{ product.Warranty }} Months</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ProductView',\n  data() {\n    return {\n      product: {},\n      editedProduct: {},\n      inCart: false,\n      editMode: false\n    };\n  },\n  created() {\n    const productId = this.$route.params.id;\n    this.fetchProduct(productId);\n  },\n  methods: {\n    fetchProduct(productId) {\n      axios\n        .get(`http://127.0.0.1:5000/edit_product/${productId}`)\n        .then(response => {\n          this.product = response.data;\n          console.log(this.product.Name);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    // Add product to cart\n    addToCart(product) {\n      const existingItem = this.$store.state.cartItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Item already exists in cart, increment quantity\n        this.$store.commit('incrementCartItemQuantity', existingItem.id);\n      } else {\n        // Item doesn't exist in cart, add as new item\n        const cartItem = {\n          id: product.id,\n          name: product.Name,\n          price: product.Price,\n          quantity: 1\n        };\n        this.$store.commit('addToCart', cartItem);\n    }\n    },\n    removeFromCart() {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    }\n  }\n};\n</script>\n\n<style>\n.product-view {\n  position: relative;\n  top: 120px;\n  padding: 100px 20px;\n  display: inline-block;\n  flex-direction: column;\n  background: white;\n  border-radius: 20px;\n  width : 60vw;\n}\n\n\n.product-view img {\n  width: 50vw;\n}\n\n</style>\n"],"mappings":"AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CAAC,CAAC;MACXC,aAAa,EAAE,CAAC,CAAC;MACjBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IACvC,IAAI,CAACC,YAAY,CAACJ,SAAS,CAAC;EAC9B,CAAC;EACDK,OAAO,EAAE;IACPD,YAAYA,CAACJ,SAAS,EAAE;MACtBR,KAAI,CACDc,GAAG,CAAE,sCAAqCN,SAAU,EAAC,EACrDO,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACb,OAAM,GAAIa,QAAQ,CAACd,IAAI;QAC5Be,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,OAAO,CAACgB,IAAI,CAAC;MAChC,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACD;IACAC,SAASA,CAACnB,OAAO,EAAE;MACjB,MAAMoB,YAAW,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAS,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACjB,EAAC,KAAMR,OAAO,CAACQ,EAAE,CAAC;MACrF,IAAIY,YAAY,EAAE;QAChB;QACA,IAAI,CAACC,MAAM,CAACK,MAAM,CAAC,2BAA2B,EAAEN,YAAY,CAACZ,EAAE,CAAC;MAClE,OAAO;QACL;QACA,MAAMmB,QAAO,GAAI;UACfnB,EAAE,EAAER,OAAO,CAACQ,EAAE;UACdV,IAAI,EAAEE,OAAO,CAACgB,IAAI;UAClBY,KAAK,EAAE5B,OAAO,CAAC6B,KAAK;UACpBC,QAAQ,EAAE;QACZ,CAAC;QACD,IAAI,CAACT,MAAM,CAACK,MAAM,CAAC,WAAW,EAAEC,QAAQ,CAAC;MAC7C;IACA,CAAC;IACDI,cAAcA,CAAA,EAAG;MACf,IAAI,CAACV,MAAM,CAACK,MAAM,CAAC,2BAA2B,EAAED,IAAI,CAACjB,EAAE,CAAC;IAC1D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}