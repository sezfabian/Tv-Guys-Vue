{"ast":null,"code":"export default {\n  computed: {\n    cartItems() {\n      return this.$store.state.cartItems;\n    },\n    totalQuantity() {\n      return this.cartItems.reduce((total, item) => total + item.quantity, 0);\n    },\n    totalCash() {\n      return this.cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n    },\n    user() {\n      return this.$store.state.username;\n    },\n    userId() {\n      return this.$store.state.userid;\n    }\n  },\n  methods: {\n    clearCart() {\n      this.$store.commit('clearCartItems');\n    },\n    incrementQuantity(item) {\n      this.$store.commit('incrementCartItemQuantity', item.id);\n    },\n    decrementQuantity(item) {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    },\n    confirmOrder() {\n      const confirmMessage = \"Are you sure you want to place this order?\";\n      if (window.confirm(confirmMessage)) {\n        const orderData = {\n          user_id: this.userId,\n          order_items: this.cartItems.map(item => ({\n            product_id: item.id,\n            quantity: item.quantity,\n            price: item.price\n          }))\n        };\n        // Send the order request to the server\n        fetch('http://127.0.0.1:5000/api/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(orderData)\n        }).then(response => response.json()).then(data => {\n          // Handle the response data as needed\n          console.log(data);\n          // Clear the cart after successful order placement\n          this.clearCart();\n        }).catch(error => {\n          console.error(error);\n          // Handle the error\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["computed","cartItems","$store","state","totalQuantity","reduce","total","item","quantity","totalCash","price","user","username","userId","userid","methods","clearCart","commit","incrementQuantity","id","decrementQuantity","confirmOrder","confirmMessage","window","confirm","orderData","user_id","order_items","map","product_id","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error"],"sources":["/home/sezfabian/Devs/The_Tv_Guys/web_app/src/components/Cart.vue"],"sourcesContent":["<template>\n  <div class=\"cart\">\n    <div class='title'>\n      <h3> User: {{ user }} Cart Items : {{ totalQuantity }}</h3>\n    </div>\n    <ul>\n      <li v-for=\"item in cartItems\" :key=\"item.id\">\n        <p>{{ item.quantity }} x {{ item.name }} @ {{ item.price }} -&nbsp;<span style=\"color: red;\"> <b>Ksh {{ item.quantity * item.price }}</b> </span></p>\n        <button @click=\"incrementQuantity(item)\">+</button>\n        <button @click=\"decrementQuantity(item)\">-</button> \n      </li>\n    </ul>\n     <p>Total Cash: Ksh {{ totalCash }}</p>\n    <button @click=\"clearCart\">Clear Cart</button>\n    <button @click=\"confirmOrder\" v-if=\"userId\">Place Order</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    cartItems() {\n      return this.$store.state.cartItems;\n    },\n    totalQuantity() {\n      return this.cartItems.reduce((total, item) => total + item.quantity, 0);\n    },\n    totalCash() {\n      return this.cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n    },\n    user() {\n      return this.$store.state.username;\n    },\n    userId() {\n      return this.$store.state.userid;\n    }\n  },\n  methods: {\n    clearCart() {\n      this.$store.commit('clearCartItems');\n    },\n    incrementQuantity(item) {\n      this.$store.commit('incrementCartItemQuantity', item.id);\n    },\n    decrementQuantity(item) {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    },\n    confirmOrder() {\n      const confirmMessage = \"Are you sure you want to place this order?\";\n      if (window.confirm(confirmMessage)) {\n        const orderData = {\n          user_id: this.userId,\n          order_items: this.cartItems.map(item => ({\n            product_id: item.id,\n            quantity: item.quantity,\n            price: item.price\n          }))\n        };\n        // Send the order request to the server\n        fetch('http://127.0.0.1:5000/api/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(orderData)\n        })\n          .then(response => response.json())\n          .then(data => {\n            // Handle the response data as needed\n            console.log(data);\n            // Clear the cart after successful order placement\n            this.clearCart();\n          })\n          .catch(error => {\n            console.error(error);\n            // Handle the error\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.cart {\n  color: black;\n  position: absolute;\n  align-content: space-between;\n  top: 130px;\n  right: 220px;\n  background-color: whitesmoke;\n  border-radius: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  text-decoration: none;\n}\n\n.cart li {\n    list-style: none;\n    color: black;\n    font-size: 20px;\n}\n\nbutton {\n  margin-top: 0px;\n  width: 150px;\n  height: 40px;\n}\n</style>\n"],"mappings":"AAmBA,eAAe;EACbA,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,SAAS;IACpC,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IACzE,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACR,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAI,GAAIC,IAAI,CAACC,QAAO,GAAID,IAAI,CAACG,KAAK,EAAE,CAAC,CAAC;IACtF,CAAC;IACDC,IAAIA,CAAA,EAAG;MACL,OAAO,IAAI,CAACT,MAAM,CAACC,KAAK,CAACS,QAAQ;IACnC,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACX,MAAM,CAACC,KAAK,CAACW,MAAM;IACjC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACd,MAAM,CAACe,MAAM,CAAC,gBAAgB,CAAC;IACtC,CAAC;IACDC,iBAAiBA,CAACX,IAAI,EAAE;MACtB,IAAI,CAACL,MAAM,CAACe,MAAM,CAAC,2BAA2B,EAAEV,IAAI,CAACY,EAAE,CAAC;IAC1D,CAAC;IACDC,iBAAiBA,CAACb,IAAI,EAAE;MACtB,IAAI,CAACL,MAAM,CAACe,MAAM,CAAC,2BAA2B,EAAEV,IAAI,CAACY,EAAE,CAAC;IAC1D,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,MAAMC,cAAa,GAAI,4CAA4C;MACnE,IAAIC,MAAM,CAACC,OAAO,CAACF,cAAc,CAAC,EAAE;QAClC,MAAMG,SAAQ,GAAI;UAChBC,OAAO,EAAE,IAAI,CAACb,MAAM;UACpBc,WAAW,EAAE,IAAI,CAAC1B,SAAS,CAAC2B,GAAG,CAACrB,IAAG,KAAM;YACvCsB,UAAU,EAAEtB,IAAI,CAACY,EAAE;YACnBX,QAAQ,EAAED,IAAI,CAACC,QAAQ;YACvBE,KAAK,EAAEH,IAAI,CAACG;UACd,CAAC,CAAC;QACJ,CAAC;QACD;QACAoB,KAAK,CAAC,kCAAkC,EAAE;UACxCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,SAAS;QAChC,CAAC,EACEW,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACG,IAAG,IAAK;UACZ;UACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;UACjB;UACA,IAAI,CAACvB,SAAS,CAAC,CAAC;QAClB,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAK;UACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;UACpB;QACF,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}