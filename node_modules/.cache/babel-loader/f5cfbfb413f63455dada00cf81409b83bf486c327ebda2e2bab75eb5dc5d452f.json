{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-530ad160\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cart\"\n};\nconst _hoisted_2 = {\n  class: \"title\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \" User: \" + _toDisplayString($options.user) + \" Cart Items : \" + _toDisplayString($options.totalQuantity), 1 /* TEXT */)]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.cartItems, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"p\", null, [_createTextVNode(_toDisplayString(item.quantity) + \" x \" + _toDisplayString(item.name) + \" @ \" + _toDisplayString(item.price) + \" -Â \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, [_createElementVNode(\"b\", null, \"Ksh \" + _toDisplayString(item.quantity * item.price), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n      onClick: $event => $options.incrementQuantity(item)\n    }, \"+\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.decrementQuantity(item)\n    }, \"-\", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"p\", null, \"Total Cash: Ksh \" + _toDisplayString($options.totalCash), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.clearCart && $options.clearCart(...args))\n  }, \"Clear Cart\"), $options.userId ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.confirmOrder && $options.confirmOrder(...args))\n  }, \"Place Order\")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$options","user","totalQuantity","_Fragment","_renderList","cartItems","item","key","id","quantity","name","price","_hoisted_3","onClick","$event","incrementQuantity","_hoisted_4","decrementQuantity","_hoisted_5","totalCash","_cache","args","clearCart","userId","confirmOrder"],"sources":["/home/sezfabian/Devs/The_Tv_Guys/web_app/src/components/Cart.vue"],"sourcesContent":["<template>\n  <div class=\"cart\">\n    <div class='title'>\n      <h3> User: {{ user }} Cart Items : {{ totalQuantity }}</h3>\n    </div>\n    <ul>\n      <li v-for=\"item in cartItems\" :key=\"item.id\">\n        <p>{{ item.quantity }} x {{ item.name }} @ {{ item.price }} -&nbsp;<span style=\"color: red;\"> <b>Ksh {{ item.quantity * item.price }}</b> </span></p>\n        <button @click=\"incrementQuantity(item)\">+</button>\n        <button @click=\"decrementQuantity(item)\">-</button> \n      </li>\n    </ul>\n     <p>Total Cash: Ksh {{ totalCash }}</p>\n    <button @click=\"clearCart\">Clear Cart</button>\n    <button @click=\"confirmOrder\" v-if=\"userId\">Place Order</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    cartItems() {\n      return this.$store.state.cartItems;\n    },\n    totalQuantity() {\n      return this.cartItems.reduce((total, item) => total + item.quantity, 0);\n    },\n    totalCash() {\n      return this.cartItems.reduce((total, item) => total + item.quantity * item.price, 0);\n    },\n    user() {\n      return this.$store.state.username;\n    },\n    userId() {\n      return this.$store.state.userid;\n    }\n  },\n  methods: {\n    clearCart() {\n      this.$store.commit('clearCartItems');\n    },\n    incrementQuantity(item) {\n      this.$store.commit('incrementCartItemQuantity', item.id);\n    },\n    decrementQuantity(item) {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    },\n    confirmOrder() {\n      const confirmMessage = \"Are you sure you want to place this order?\";\n      if (window.confirm(confirmMessage)) {\n        const orderData = {\n          user_id: this.userId,\n          order_items: this.cartItems.map(item => ({\n            product_id: item.id,\n            quantity: item.quantity,\n            price: item.price\n          }))\n        };\n        // Send the order request to the server\n        fetch('http://127.0.0.1:5000/api/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(orderData)\n        })\n          .then(response => response.json())\n          .then(data => {\n            // Handle the response data as needed\n            console.log(data);\n            // Clear the cart after successful order placement\n            this.clearCart();\n          })\n          .catch(error => {\n            console.error(error);\n            // Handle the error\n          });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.cart {\n  color: black;\n  position: absolute;\n  align-content: space-between;\n  top: 130px;\n  right: 220px;\n  background-color: whitesmoke;\n  border-radius: 10px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  text-decoration: none;\n}\n\n.cart li {\n    list-style: none;\n    color: black;\n    font-size: 20px;\n}\n\nbutton {\n  margin-top: 0px;\n  width: 150px;\n  height: 40px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAO;;EAK2DC,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;;;uBANlGC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAA2D,YAAvD,SAAO,GAAAE,gBAAA,CAAGC,QAAA,CAAAC,IAAI,IAAG,gBAAc,GAAAF,gBAAA,CAAGC,QAAA,CAAAE,aAAa,iB,GAErDL,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKQ,SAAA,QAAAC,WAAA,CAJcJ,QAAA,CAAAK,SAAS,EAAjBC,IAAI;yBAAfX,mBAAA,CAIK;MAJ0BY,GAAG,EAAED,IAAI,CAACE;QACvCX,mBAAA,CAAqJ,Y,kCAA/IS,IAAI,CAACG,QAAQ,IAAG,KAAG,GAAAV,gBAAA,CAAGO,IAAI,CAACI,IAAI,IAAG,KAAG,GAAAX,gBAAA,CAAGO,IAAI,CAACK,KAAK,IAAG,KAAQ,iBAAAd,mBAAA,CAA8E,QAA9Ee,UAA8E,GAAnDf,mBAAA,CAA2C,WAAxC,MAAI,GAAAE,gBAAA,CAAGO,IAAI,CAACG,QAAQ,GAAGH,IAAI,CAACK,KAAK,iB,KAClId,mBAAA,CAAmD;MAA1CgB,OAAK,EAAAC,MAAA,IAAEd,QAAA,CAAAe,iBAAiB,CAACT,IAAI;OAAG,GAAC,iBAAAU,UAAA,GAC1CnB,mBAAA,CAAmD;MAA1CgB,OAAK,EAAAC,MAAA,IAAEd,QAAA,CAAAiB,iBAAiB,CAACX,IAAI;OAAG,GAAC,iBAAAY,UAAA,E;oCAG7CrB,mBAAA,CAAsC,WAAnC,kBAAgB,GAAAE,gBAAA,CAAGC,QAAA,CAAAmB,SAAS,kBAChCtB,mBAAA,CAA8C;IAArCgB,OAAK,EAAAO,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAsB,SAAA,IAAAtB,QAAA,CAAAsB,SAAA,IAAAD,IAAA,CAAS;KAAE,YAAU,GACDrB,QAAA,CAAAuB,MAAM,I,cAA1C5B,mBAAA,CAAgE;;IAAvDkB,OAAK,EAAAO,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAwB,YAAA,IAAAxB,QAAA,CAAAwB,YAAA,IAAAH,IAAA,CAAY;KAAgB,aAAW,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}