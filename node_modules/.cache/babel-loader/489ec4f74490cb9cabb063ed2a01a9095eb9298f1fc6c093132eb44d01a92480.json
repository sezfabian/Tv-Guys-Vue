{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"product-view\"\n};\nconst _hoisted_2 = {\n  class: \"product-image\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"product-details\"\n};\nconst _hoisted_5 = {\n  class: \"price\"\n};\nconst _hoisted_6 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $data.product.Image,\n    alt: \"Product Image\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($data.product.Name), 1 /* TEXT */), _createElementVNode(\"h3\", _hoisted_5, \"Ksh \" + _toDisplayString($data.product.Price) + \".00\", 1 /* TEXT */), !$data.inCart ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.addToCart($data.product))\n  }, \"Add to Cart\")) : _createCommentVNode(\"v-if\", true), $data.inCart ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.removeFromCart && $options.removeFromCart(...args))\n  }, \"Remove from Cart\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, _toDisplayString($data.product.Description), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Warranty: \" + _toDisplayString($data.product.Warranty) + \" Months\", 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","src","$data","product","Image","alt","_hoisted_4","_toDisplayString","Name","_hoisted_5","Price","inCart","onClick","_cache","$event","$options","addToCart","args","removeFromCart","_hoisted_6","Description","Warranty"],"sources":["/home/sezfabian/Devs/The_Tv_Guys/web_app/src/views/ProductView.vue"],"sourcesContent":["<template>\n  <div class=\"product-view\">\n    <div class=\"product-image\">\n      <img :src=\"product.Image\" alt=\"Product Image\" />\n    </div>\n        <div class=\"product-details\">\n            <h2>{{ product.Name }}</h2>\n            <h3 class=\"price\">Ksh {{ product.Price }}.00</h3>\n            <button @click=\"addToCart(product)\" v-if=\"!inCart\">Add to Cart</button>\n            <button @click=\"removeFromCart\" v-if=\"inCart\">Remove from Cart</button>\n        </div>\n        <div class=\"buttons\">\n            <p>{{ product.Description }}</p>\n            <p>Warranty: {{ product.Warranty }} Months</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ProductView',\n  data() {\n    return {\n      product: {},\n      editedProduct: {},\n      inCart: false,\n      editMode: false\n    };\n  },\n  created() {\n    const productId = this.$route.params.id;\n    this.fetchProduct(productId);\n  },\n  methods: {\n    fetchProduct(productId) {\n      axios\n        .get(`http://127.0.0.1:5000/edit_product/${productId}`)\n        .then(response => {\n          this.product = response.data;\n          console.log(this.product.Name);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    // Add product to cart\n    addToCart(product) {\n      const existingItem = this.$store.state.cartItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Item already exists in cart, increment quantity\n        this.$store.commit('incrementCartItemQuantity', existingItem.id);\n      } else {\n        // Item doesn't exist in cart, add as new item\n        const cartItem = {\n          id: product.id,\n          name: product.Name,\n          price: product.Price,\n          quantity: 1\n        };\n        this.$store.commit('addToCart', cartItem);\n    }\n    },\n    removeFromCart() {\n      this.$store.commit('decrementCartItemQuantity', item.id);\n    }\n  }\n};\n</script>\n\n<style>\n.product-view {\n  position: relative;\n  top: 120px;\n  padding: 100px 20px;\n  display: inline-block;\n  flex-direction: column;\n  background: white;\n  border-radius: 20px;\n  width : 60vw;\n}\n\n\n.product-view img {\n  width: 50vw;\n}\n\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAe;;;EAGjBA,KAAK,EAAC;AAAiB;;EAEpBA,KAAK,EAAC;AAAO;;EAIhBA,KAAK,EAAC;AAAS;;uBAV1BC,mBAAA,CAcQ,OAdRC,UAcQ,GAbNC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAgD;IAA1CE,GAAG,EAAEC,KAAA,CAAAC,OAAO,CAACC,KAAK;IAAEC,GAAG,EAAC;yCAE5BN,mBAAA,CAKM,OALNO,UAKM,GAJFP,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBL,KAAA,CAAAC,OAAO,CAACK,IAAI,kBACnBT,mBAAA,CAAiD,MAAjDU,UAAiD,EAA/B,MAAI,GAAAF,gBAAA,CAAGL,KAAA,CAAAC,OAAO,CAACO,KAAK,IAAG,KAAG,iB,CACDR,KAAA,CAAAS,MAAM,I,cAAjDd,mBAAA,CAAuE;;IAA9De,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACd,KAAA,CAAAC,OAAO;KAAkB,aAAW,K,mCACxBD,KAAA,CAAAS,MAAM,I,cAA5Cd,mBAAA,CAAuE;;IAA9De,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEF,QAAA,CAAAG,cAAA,IAAAH,QAAA,CAAAG,cAAA,IAAAD,IAAA,CAAc;KAAgB,kBAAgB,K,qCAElElB,mBAAA,CAGM,OAHNoB,UAGM,GAFFpB,mBAAA,CAAgC,WAAAQ,gBAAA,CAA1BL,KAAA,CAAAC,OAAO,CAACiB,WAAW,kBACzBrB,mBAAA,CAA8C,WAA3C,YAAU,GAAAQ,gBAAA,CAAGL,KAAA,CAAAC,OAAO,CAACkB,QAAQ,IAAG,SAAO,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}